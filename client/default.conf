# Define the backend API server(s)
upstream api_backend {
    server backend:3000;  # Replace 'backend' with the appropriate service name if using Docker
}

# HTTP - Redirect to HTTPS
server {
    listen 80;
    server_name localhost;  # Replace with your domain or IP if necessary

    # Redirect all traffic from HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS Server - Serve frontend and API
server {
    listen 443 ssl;
    server_name localhost;  # Replace with your domain or IP if necessary

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/selfsigned.crt;  # Path to the SSL certificate
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;  # Path to the SSL private key

    # SSL settings (recommended for security)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    # Serve the React frontend
    root /usr/share/nginx/html;

    # Serve frontend files (React SPA)
    location / {
        try_files $uri /index.html;
    }

    # Proxy API requests to the backend
    location /api/ {
        proxy_pass http://api_backend;  # Forward requests to the upstream group
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;  # Disable buffering for SSE
        proxy_cache off;      # Do not cache SSE responses
    }

    # Fallback for error pages (important for client-side routing)
    error_page 404 /index.html;
}
